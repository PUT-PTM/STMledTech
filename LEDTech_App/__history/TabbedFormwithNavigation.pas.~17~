unit TabbedFormwithNavigation;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.TabControl, FMX.StdCtrls, FMX.Controls.Presentation,
  FMX.Gestures, System.Actions, FMX.ActnList, FMX.Colors, FMX.Layouts, BluetoothUnit,
  FMX.ListBox;

type
  THSV = record  // hue saturation value (HSV)
    Hue , Sat , Val : Double;
  end;
  TLEDTech = class(TForm)
    TabControl1: TTabControl;
    ConnectionTab: TTabItem;
    ConnectForm: TTabControl;
    TabItem5: TTabItem;
    ColorTab: TTabItem;
    GestureManager1: TGestureManager;
    EffectsTab: TTabItem;
    ColorPicker: TColorPicker;
    ColorQuad: TColorQuad;
    ColorBox: TColorBox;
    btnRainbow: TCornerButton;
    TabItem6: TTabItem;
    lbDevices: TListBox;
    lblStatus: TLabel;
    procedure GestureDone(Sender: TObject; const EventInfo: TGestureEventInfo; var Handled: Boolean);
    procedure FormCreate(Sender: TObject);
    procedure lbDevicesChange(Sender: TObject);
    procedure ColorBoxClick(Sender: TObject);
  private
    Bluetooth: TBTMethod;
  public
    function RGB2HSV (R,G,B : Byte) : THSV;
  end;

var
  LEDTech: TLEDTech;

implementation

{$R *.fmx}

uses Math;

function TLEDTech.RGB2HSV (R,G,B : Byte) : THSV;
var
  Min_, Max_, Delta : Double;
  H , S , V : Double ;
begin
  H := 0.0 ;
  Min_ := Min (Min( R,G ), B);
  Max_ := Max (Max( R,G ), B);
  Delta := ( Max_ - Min_ );
  V := Max_ ;
  If ( Max_ <> 0.0 ) then
    S := 255.0 * Delta / Max_
  else
    S := 0.0 ;
  If (S <> 0.0) then
    begin
      If R = Max_ then
        H := (G - B) / Delta
      else
        If G = Max_ then
          H := 2.0 + (B - R) / Delta
        else
          If B = Max_ then
            H := 4.0 + (R - G) / Delta
    End
  else
    H := -1.0 ;
  H := H * 60 ;
  If H < 0.0 then H := H + 360.0;
  with Result Do
    begin
      Hue := H ;             // Hue -> 0..360
      Sat := S * 100 / 255; // Saturation -> 0..100 %
      Val := V * 100 / 255; // Value - > 0..100 %
    end;
end;


procedure TLEDTech.ColorBoxClick(Sender: TObject);
var
  R, G, B: Byte;
  RGB: Integer;
  Color: TColorRec;
begin
  RGB := Color.ColorToRGB(ColorBox.Color);
  R := (RGB and $00ff0000) shr 16;
  G := (RGB and $0000ff00) shr 8;
  B := RGB and $000000ff;

  ShowMessage( IntToHex(RGB, 2) + '  ' + IntToStr(R) + ' ' + IntToStr(G) + ' ' + IntToStr(B));
end;

procedure TLEDTech.FormCreate(Sender: TObject);
begin
  { This defines the default active tab at runtime }
  TabControl1.ActiveTab := ConnectionTab;
  Bluetooth := TBTMethod.Create;
  lbDevices.Items := Bluetooth.PairedDevices;
end;

procedure TLEDTech.GestureDone(Sender: TObject; const EventInfo: TGestureEventInfo; var Handled: Boolean);
begin
  case EventInfo.GestureID of
    sgiLeft:
      begin
        if TabControl1.ActiveTab <> TabControl1.Tabs[TabControl1.TabCount - 1] then
          TabControl1.ActiveTab := TabControl1.Tabs[TabControl1.TabIndex + 1];
        Handled := True;
      end;

    sgiRight:
      begin
        if TabControl1.ActiveTab <> TabControl1.Tabs[0] then
          TabControl1.ActiveTab := TabControl1.Tabs[TabControl1.TabIndex - 1];
        Handled := True;
      end;
  end;
end;

procedure TLEDTech.lbDevicesChange(Sender: TObject);
var
  DeviceInfo : DServiceListType;
begin
  if lbDevices.ItemIndex > -1 then
    begin
      lblStatus.Text := 'Trwa ³¹czenie....';
      DeviceInfo := Bluetooth.Find_ServicesList(lbDevices.ItemIndex);
      Bluetooth.FServiceGUID := DeviceInfo.DServiceGUID[0];
      Bluetooth.MyDeviceName := DeviceInfo.DServiceName.Text;

      ColorTab.Enabled := True;
      EffectsTab.Enabled := True;

      lblStatus.Text := 'Po³¹czono';
      lblStatus.FontColor := $FF00FF00;

    end else ShowMessage('Nie wybrano urz¹dzenia');
end;

end.

