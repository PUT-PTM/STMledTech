unit TabbedFormwithNavigation;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.TabControl, FMX.StdCtrls, FMX.Controls.Presentation,
  FMX.Gestures, System.Actions, FMX.ActnList, FMX.Colors, FMX.Layouts, BluetoothUnit,
  FMX.ListBox, FMX.Edit;

type
  TLEDTech = class(TForm)
    TabControl1: TTabControl;
    ConnectionTab: TTabItem;
    ConnectForm: TTabControl;
    TabItem5: TTabItem;
    ColorTab: TTabItem;
    GestureManager1: TGestureManager;
    ColorPicker: TColorPicker;
    ColorQuad: TColorQuad;
    ColorBox: TColorBox;
    TabItem6: TTabItem;
    lbDevices: TListBox;
    lblStatus: TLabel;
    btnBack: TButton;
    edtLEDNumber: TEdit;
    btnNext: TButton;
    btnSelectAll: TSwitch;
    Label1: TLabel;
    OptionsTab: TTabItem;
    OptionsBox: TListBox;
    procedure GestureDone(Sender: TObject; const EventInfo: TGestureEventInfo; var Handled: Boolean);
    procedure FormCreate(Sender: TObject);
    procedure lbDevicesChange(Sender: TObject);
    procedure ColorBoxClick(Sender: TObject);
    procedure btnSelectAllSwitch(Sender: TObject);
    procedure btnNextClick(Sender: TObject);
    procedure btnBackClick(Sender: TObject);
    procedure OptionsBoxChange(Sender: TObject);
  private
    Bluetooth: TBTMethod; //TBTMethod object
    LEDNumber, Option, R, G, B: Byte;
  public
  end;

var
  LEDTech: TLEDTech;

implementation

{$R *.fmx}


procedure TLEDTech.btnBackClick(Sender: TObject);
begin
  if LEDNumber = 1 then LEDNumber := 80 else Dec(LEDNumber);
  edtLEDNumber.Text := IntToStr(LEDNumber);
end;

procedure TLEDTech.btnNextClick(Sender: TObject);
begin
  if LEDNumber = 80 then LEDNumber := 1 else Inc(LEDNumber);
  edtLEDNumber.Text := IntToStr(LEDNumber);
end;

procedure TLEDTech.btnSelectAllSwitch(Sender: TObject);
begin
  if btnSelectAll.IsChecked then
    begin
      LEDNumber := 100;
      edtLEDNumber.Enabled := false;
      btnBack.Enabled := false;
      btnNext.Enabled := false;
    end
     else
    begin
      LedNumber := StrToInt(edtLEDNumber.Text);
      edtLEDNumber.Enabled := false;
      btnBack.Enabled := false;
      btnNext.Enabled := false;
    end;
end;

procedure TLEDTech.ColorBoxClick(Sender: TObject);  //Send new color to STM board
var
  RGB: Integer;
  Color: TColorRec;
begin
  RGB := Color.ColorToRGB(ColorBox.Color);
  R := (RGB and $00ff0000) shr 16;
  G := (RGB and $0000ff00) shr 8;
  B := RGB and $000000ff;

  Bluetooth.SendData(lbDevices.ItemIndex, LEDNumber - 1, Option, R, G, B);
end;

procedure TLEDTech.FormCreate(Sender: TObject);
begin
  { This defines the default active tab at runtime }
  TabControl1.ActiveTab := ConnectionTab;
  Bluetooth := TBTMethod.Create;
  lbDevices.Items := Bluetooth.PairedDevices;
  LEDNumber := 1;
  Option := 0;
  edtLEDNumber.Text := IntToStr(LEDNumber);
end;

procedure TLEDTech.GestureDone(Sender: TObject; const EventInfo: TGestureEventInfo; var Handled: Boolean);
begin
  case EventInfo.GestureID of
    sgiLeft:
      begin
        if TabControl1.ActiveTab <> TabControl1.Tabs[TabControl1.TabCount - 1] then
          TabControl1.ActiveTab := TabControl1.Tabs[TabControl1.TabIndex + 1];
        Handled := True;
      end;

    sgiRight:
      begin
        if TabControl1.ActiveTab <> TabControl1.Tabs[0] then
          TabControl1.ActiveTab := TabControl1.Tabs[TabControl1.TabIndex - 1];
        Handled := True;
      end;
  end;
end;

procedure TLEDTech.lbDevicesChange(Sender: TObject);
var
  DeviceInfo : DServiceListType;
begin
  if lbDevices.ItemIndex > -1 then
    begin
      lblStatus.Text := 'Connecting....';
      DeviceInfo := Bluetooth.Find_ServicesList(lbDevices.ItemIndex);
      Bluetooth.FServiceGUID := DeviceInfo.DServiceGUID[0];
      Bluetooth.MyDeviceName := DeviceInfo.DServiceName.Text;

      ColorTab.Enabled := True;
      OptionsTab.Enabled := True;

      lblStatus.Text := 'Connected';
      lblStatus.FontColor := $FF00FF00;

    end else ShowMessage('No selected device');
end;

procedure TLEDTech.OptionsBoxChange(Sender: TObject);
begin
  Option := OptionsBox.ItemIndex;
  Bluetooth.SendData(lbDevices.ItemIndex, LEDNumber - 1, Option, R, G, B);
end;

end.

